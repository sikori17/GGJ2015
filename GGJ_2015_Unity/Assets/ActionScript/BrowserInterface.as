package{	import flash.external.ExternalInterface;	import flash.system.Security;	import global.GlobalData;		public class BrowserInterface	{		public static function ApplicationFocused() : void		{			trace("AS: Javascript focused the game");			GlobalData.ApplicationFocused();		}		public static function ApplicationLostFocus() : void		{			trace("AS: Javascript lost focus of the game");			GlobalData.ApplicationLostFocus();		}				public static function ConsoleLog(msg : String) : void {			trace("AS: " + msg);			if(ExternalInterface.available){				ExternalInterface.call('ConsoleLog', {msg: msg});			}		}				//Sets up an ExternalInterface callback and calls a Javascript function.		public static function EstablishCallbacks() : void		{			if (ExternalInterface.available)			{				try				{					ExternalInterface.addCallback("ApplicationFocused", ApplicationFocused);					ExternalInterface.addCallback("ApplicationLostFocus", ApplicationLostFocus);				}				catch (error:SecurityError)				{					trace("AS: A SecurityError occurred: " + error.message);				}				catch (error:Error)				{					trace("AS: An Error occurred: " + error.message);				}								ExternalInterface.call('UnityBrowserInterfaceCallbacksEstablished');			}			else			{				trace("AS: External interface not available");			}		}				public static function ConfirmCallbacksReceived() : void		{			trace("AS: Javascript successfully received EstablishCallbacks call");		}	}}